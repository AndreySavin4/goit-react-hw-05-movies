{"version":3,"file":"static/js/597.c447665f.chunk.js","mappings":"8LAsCA,UAlCa,WACX,OAA0BA,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAUR,OARAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaH,GACVI,MAAK,SAAAC,GACJN,EAASM,EAAIC,KACd,IACAC,OAAM,SAAAC,GAAK,OAAI,IAAIC,MAAMD,EAAd,GACf,GAAE,CAACR,IAECF,GAKH,wBACGA,EAAMY,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,UAAWb,EAAS,EAATA,GAC3C,OACE,2BACE,gBACEc,IAAG,yCAAoCH,GACvCI,IAAI,MAEN,uBAAIH,KACJ,uCAAeC,OANRb,EASZ,OAhBI,uCAmBV,C,sBCpCD,SAASgB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOjB,GAEP,YADAW,EAAOX,EAET,CAEIgB,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOrB,KAAKgB,EAAOC,EAEvC,CAEe,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMY,EAAGK,MAAMJ,EAAME,GAEzB,SAASZ,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOc,GACdnB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASc,EACnE,CAEAf,OAAMgB,EACR,GACF,CACF,C,uJClCMC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIOC,EAAQ,6BAAG,oGACJC,MAChB,2FACAN,GAHoB,cAChBhC,EADgB,gBAKTA,EAAIuC,OALK,mFAAH,qDAQRC,EAAe,SAAAC,GAC1B,OAAOH,MAAM,mDAAD,OACyCG,EADzC,8CAEVT,EAEH,EAEYU,EAAW,6BAAG,WAAM/C,GAAN,0FAClB2C,MAAM,sCAAD,OAC4B3C,EAD5B,mBAEVqC,GACAjC,MAAK,SAAA4C,GAAQ,OAAIA,EAASJ,MAAb,KAJU,2CAAH,sDAOXzC,EAAY,6BAAG,WAAMH,GAAN,uFACR2C,MAAM,sCAAD,OACiB3C,EADjB,2BAErBqC,GAHwB,cACpBhC,EADoB,gBAKbA,EAAIuC,OALS,mFAAH,sDAQZK,EAAY,6BAAG,WAAMjD,GAAN,yFACH2C,MAAM,sCAAD,OACY3C,EADZ,kCAE1BqC,GAHwB,cACpBW,EADoB,gBAKDA,EAASJ,OALR,cAKpBM,EALoB,yBAMnBA,GANmB,2CAAH,qD","sources":["components/Cast.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","servise/Servise.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { MovieCredits } from 'servise/Servise';\n\nconst Cast = () => {\n  const [casts, setCasts] = useState(null);\n  const { id } = useParams();\n\n  useEffect(() => {\n    MovieCredits(id)\n      .then(res => {\n        setCasts(res.cast);\n      })\n      .catch(error => new Error(error));\n  }, [id]);\n\n  if (!casts) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <ul>\n      {casts.map(({ profile_path, name, character, id }) => {\n        return (\n          <li key={id}>\n            <img\n              src={`https://image.tmdb.org/t/p/w200${profile_path}`}\n              alt=\"\"\n            />\n            <p>{name}</p>\n            <p>Character: {character}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default Cast;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","const options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlNzMyOGMzOTFjMGM2NzdhOGVlMTVkNzZhMGMwOWI0OSIsInN1YiI6IjY0NjNiNGI4ZGJiYjQyMDEzNjM4OGY2MyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.5-onE9RDABl6DkqZwObgftaf4MPI3LnzHVcMmjrK6Mo',\n  },\n};\n\nexport const Trending = async () => {\n  const res = await fetch(\n    'https://api.themoviedb.org/3/trending/movie/day?api_key=e7328c391c0c677a8ee15d76a0c09b49',\n    options\n  );\n  return await res.json();\n};\n\nexport const SearchMovies = query => {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?query=${query}&include_adult=false&language=en-US&page=1`,\n    options\n  );\n};\n\nexport const MovieDetail = async id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}?language=en-US`,\n    options\n  ).then(response => response.json());\n};\n\nexport const MovieCredits = async id => {\n  const res = await fetch(\n    `https://api.themoviedb.org/3/movie/${id}/credits?language=en-US`,\n    options\n  );\n  return await res.json();\n};\n\nexport const MovieReviews = async id => {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?language=en-US&page=1`,\n    options\n  );\n  const response_1 = await response.json();\n  return response_1;\n};\n"],"names":["useState","casts","setCasts","id","useParams","useEffect","MovieCredits","then","res","cast","catch","error","Error","map","profile_path","name","character","src","alt","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","options","method","headers","accept","Authorization","Trending","fetch","json","SearchMovies","query","MovieDetail","response","MovieReviews","response_1"],"sourceRoot":""}