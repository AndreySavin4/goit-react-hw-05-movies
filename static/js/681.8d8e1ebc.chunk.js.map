{"version":3,"file":"static/js/681.8d8e1ebc.chunk.js","mappings":"8LAiCA,UA7Be,WACb,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEQC,GAAOC,EAAAA,EAAAA,MAAPD,GAMR,OAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaH,GAAII,MAAK,SAAAC,GAAG,OAAIN,EAAWM,EAAIC,QAAnB,GAC1B,GAAE,CAACN,KAGF,8BACGF,EAAQS,OAAS,GAChB,wBACGT,EAAQU,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,QAASV,EAAS,EAATA,GAC/B,OACE,2BACE,qCAAaS,MACb,uBAAIC,MAFGV,EAKZ,OAGH,sEAIP,C,sBC/BD,SAASW,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOhB,KAAKW,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C,uJClCMC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIOC,EAAQ,6BAAG,oGACJC,MAChB,2FACAN,GAHoB,cAChB5B,EADgB,gBAKTA,EAAImC,OALK,mFAAH,qDAQRC,EAAe,SAAAC,GAC1B,OAAOH,MAAM,mDAAD,OACyCG,EADzC,8CAEVT,EAEH,EAEYU,EAAW,6BAAG,WAAM3C,GAAN,0FAClBuC,MAAM,sCAAD,OAC4BvC,EAD5B,mBAEViC,GACA7B,MAAK,SAAAwC,GAAQ,OAAIA,EAASJ,MAAb,KAJU,2CAAH,sDAOXK,EAAY,6BAAG,WAAM7C,GAAN,uFACRuC,MAAM,sCAAD,OACiBvC,EADjB,2BAErBiC,GAHwB,cACpB5B,EADoB,gBAKbA,EAAImC,OALS,mFAAH,sDAQZrC,EAAY,6BAAG,WAAMH,GAAN,yFACHuC,MAAM,sCAAD,OACYvC,EADZ,kCAE1BiC,GAHwB,cACpBW,EADoB,gBAKDA,EAASJ,OALR,cAKpBM,EALoB,yBAMnBA,GANmB,2CAAH,qD","sources":["components/Reviews.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","servise/Servise.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { MovieReviews } from 'servise/Servise';\nimport { useParams } from 'react-router-dom';\n\nconst Review = () => {\n  const [reviews, setReviews] = useState([]);\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    MovieReviews(id).then(res => setReviews(res.results));\n  }, [id]);\n\n  return (\n    <>\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(({ author, content, id }) => {\n            return (\n              <li key={id}>\n                <p>Author : {author}</p>\n                <p>{content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <h3>We don't have any reviews for this movie</h3>\n      )}\n    </>\n  );\n};\n\nexport default Review;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","const options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlNzMyOGMzOTFjMGM2NzdhOGVlMTVkNzZhMGMwOWI0OSIsInN1YiI6IjY0NjNiNGI4ZGJiYjQyMDEzNjM4OGY2MyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.5-onE9RDABl6DkqZwObgftaf4MPI3LnzHVcMmjrK6Mo',\n  },\n};\n\nexport const Trending = async () => {\n  const res = await fetch(\n    'https://api.themoviedb.org/3/trending/movie/day?api_key=e7328c391c0c677a8ee15d76a0c09b49',\n    options\n  );\n  return await res.json();\n};\n\nexport const SearchMovies = query => {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?query=${query}&include_adult=false&language=en-US&page=1`,\n    options\n  );\n};\n\nexport const MovieDetail = async id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}?language=en-US`,\n    options\n  ).then(response => response.json());\n};\n\nexport const MovieCredits = async id => {\n  const res = await fetch(\n    `https://api.themoviedb.org/3/movie/${id}/credits?language=en-US`,\n    options\n  );\n  return await res.json();\n};\n\nexport const MovieReviews = async id => {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?language=en-US&page=1`,\n    options\n  );\n  const response_1 = await response.json();\n  return response_1;\n};\n"],"names":["useState","reviews","setReviews","id","useParams","useEffect","MovieReviews","then","res","results","length","map","author","content","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","options","method","headers","accept","Authorization","Trending","fetch","json","SearchMovies","query","MovieDetail","response","MovieCredits","response_1"],"sourceRoot":""}